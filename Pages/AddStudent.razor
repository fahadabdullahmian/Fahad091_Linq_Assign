@page "/addstudent"
@using BlazorLinq.Data;
@using BlazorLinq.Model;
@inject AppDbContext _db
<h3>AddStudent</h3>

<EditForm Model="@student" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label for="name">Student Name:</label>
    <InputText id="name" @bind-Value="student.sname"/>
    <br />
    <label for="major">Major:</label>
    <InputText id="major" @bind-Value="student.major" />
    <br />
    <label for="standing">Standing:</label>
    <InputText id="standing" @bind-Value="student.standing" />
    <br />
    <label for="fid">Select Teacher:</label>
    <InputSelect @bind-Value="student.faculty">
        <option value="">Select...</option>
        @foreach (var item in _db.Faculti.ToList())
        {
            <option value="@item.fid">@item.fname</option>
        }
    </InputSelect>
    <br />
    <label for="course">Select Course:</label>
    <InputSelect @bind-Value="student.enrolls">
        <option value="">Select...</option>
        @foreach (var item in _db.Enrolled.ToList())
        {
            <option value="@item.eid">@item.eid</option>
        }
    </InputSelect>
    <br />
    <button type="submit">Save Data</button>
</EditForm>

<table>
    <tbody>
        @foreach (var currStudent in students)
        {
            <tr>
                <td>@currStudent.sname</td>
                <td>@currStudent.major</td>
                <td>@currStudent.standing</td>
                <td>@currStudent.faculty</td>
                <td>@currStudent.enrolls</td>
                <td><button @onclick="() => EditStudent(currStudent)">Edit</button></td>
                <td><button @onclick="() => DeleteStudent(currStudent)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    Student student = new Student();
    List<Student> students = new List<Student>();

    protected override void OnInitialized()
    {
        LoadStudents();
    }

    void LoadStudents()
    {
        students = _db.studen.ToList();
    }

    void ValidSubmit()
    {
        if (student.sid == 0)
        {
            _db.Add(student);
        }
        else
        {
            _db.Update(student);
        }

        _db.SaveChanges();
        student = new Student();   
        LoadStudents();     }

    void EditStudent(Student currentStudent)
    {
        student = currentStudent;
    }

    void DeleteStudent(Student currentStudent)
    {
        _db.Remove(currentStudent);
        _db.SaveChanges();
        LoadStudents(); 
    }
}